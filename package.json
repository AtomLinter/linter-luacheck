{
  "name": "linter-luacheck",
  "description": "Lint Lua on the fly, using luacheck",
  "keywords": [
    "lint",
    "linter",
    "lua",
    "luacheck",
    "lua-lint"
  ],
  "configSchema": {
    "executablePath": {
      "type": "string",
      "default": "luacheck",
      "description": "The executable path to Luacheck."
    },
    "standards": {
      "type": "array",
      "default": [],
      "description": "List of comma separated standards (eg. `min, busted`)."
    },
    "globals": {
      "type": "array",
      "default": [],
      "description": "Add the following comma separated globals on top of standard ones (eg. `jit, bit`)."
    },
    "ignore": {
      "type": "array",
      "default": [],
      "description": "Ignore warnings related to these comma separated variables (eg `self, myvar`),"
    }
  },
  "providedServices": {
    "linter": {
      "versions": {
        "2.0.0": "provideLinter"
      }
    }
  },
  "main": "./lib/init",
  "version": "2.0.1",
  "private": true,
  "repository": "https://github.com/AtomLinter/linter-luacheck",
  "license": "MIT",
  "engines": {
    "atom": ">=1.14.0 <2.0.0"
  },
  "dependencies": {
    "atom-linter": "10.0.0",
    "atom-package-deps": "5.1.0"
  },
  "package-deps": [
    "linter:2.0.0"
  ],
  "devDependencies": {
    "eslint": "6.0.0",
    "eslint-config-airbnb-base": "13.1.0",
    "eslint-plugin-import": "2.17.3",
    "jasmine-fix": "1.3.1"
  },
  "eslintConfig": {
    "rules": {
      "comma-dangle": [
        "error",
        "never"
      ],
      "global-require": "off",
      "no-console": "off",
      "import/no-unresolved": [
        "error",
        {
          "ignore": [
            "atom"
          ]
        }
      ]
    },
    "extends": "airbnb-base",
    "globals": {
      "atom": true
    },
    "env": {
      "node": true,
      "browser": true
    }
  },
  "renovate": {
    "extends": [
      "config:base"
    ],
    "semanticCommits": true,
    "rangeStrategy": "pin",
    "packageRules": [
      {
        "packagePatterns": [
          "^eslint"
        ],
        "groupName": "ESLint packages"
      }
    ]
  },
  "scripts": {
    "lint": "eslint ."
  }
}
